/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "ocelot.h"
#include "main.h"
#include "pointers.h"

_t_ocelot_array *_v_ocelot_pointers;

/* Header for class it_unisa_ocelot_simulator_CBridge */

#ifndef _Included_it_unisa_ocelot_simulator_CBridge
#define _Included_it_unisa_ocelot_simulator_CBridge
#ifdef __cplusplus
extern "C" {
#endif

#define TYPE_INT 0
#define TYPE_DOUBLE 1
#define TYPE_CHAR 2
#define TYPE_LONG 3

#define MAX_EVENTS_NUMBER 1000
#define TIMEOUT 30
#define TIMEOUT_GRANULARITY 1000

#define OCELOT_ERR_TOOMANYEVENTS 1
#define OCELOT_ERR_UNKNOWN 2

/*
 * Class:     it_unisa_ocelot_simulator_CBridge
 * Method:    getEvents
 * Signature: (Lit/unisa/ocelot/simulator/EventsHandler;[Ljava/lang/Object;[[Ljava/lang/Object;[Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_it_unisa_ocelot_simulator_CBridge_getEvents(JNIEnv *, jobject, jobject, jobjectArray, jobjectArray, jobjectArray);
JNIEXPORT void JNICALL Java_it_unisa_ocelot_simulator_CBridge_initialize(JNIEnv *, jobject);

void _f_ocelot_fork();

void _f_ocelot_do_stuff(JNIEnv *env, jobject self, jobject eventHandler, jobjectArray values, jobjectArray arrays, jobjectArray pointers, int*);
jdouble _f_ocelot_numval(JNIEnv*, jobject);
void _f_ocelot_init_arrays(JNIEnv*, jobjectArray, int*);
void _f_ocelot_throw_runtimeexception(JNIEnv*, char*);

#define OCELOT_ARGUMENT_VALUE(i) (*env)->GetObjectArrayElement(env, values, i)
#define OCELOT_ARGUMENT_ARRAY(i) (*env)->GetObjectArrayElement(env, arrays, i)
#define OCELOT_ARGUMENT_POINTER(i) (*env)->GetObjectArrayElement(env, pointers, i)

#define OCELOT_NUM(object) _f_ocelot_numval(env, object)

#ifdef __cplusplus
}
#endif
#endif
